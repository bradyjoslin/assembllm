name: RSS Article Summarizer
description: |
  This workflow calls an RSS feed sent in as a prompt, obtains the title and url of
  the first 5 stories in the feed, and  calls an external workflow that provides
  a summary.  Then a post script adds output formatting by adding the title from the
  rss feed as a markdown header above the response.

iterator_script: |
  // Fetch the RSS feed
  let rss = Get(input);

  // Split the feed into items
  let items = split(rss, "<item>")[1:];

  // Get the titles and links from the items as 'TITLE --- URL'
  let titlesAndLinks = items | map(
      join(
        split(#, "<title>") 
        | last()
        | split("</title>")
        | map(
          split(#, "<link>") 
          | last() + " --- "
          | split("</link>") 
          | first()
       )
     )
  );

  // Take the first 5
  let top5 = titlesAndLinks | take(5);

  // Output the top 5
  top5

tasks:
  - post_script: |
      // Call an article summarization workflow.
      let res = Workflow("./workflows/article_summary.yaml", iterValue);

      // Current iterValue is retained across tasks.  We use it to form a summary header.
      let title = split(iterValue, "---") | first();
      "# " + title + "\n" + res
