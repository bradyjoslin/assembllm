name: Algorithm Time Complexity Workflow
description: |
  This workflow is designed to help users analyze the time complexity of algorithms and functions.
  The AI will calculate its time complexity using Big O notation.

tasks:
  - name: algorithm_time_complexity
    plugin: cloudflare
    model: "@hf/thebloke/deepseek-coder-6.7b-instruct-awq"
    role: |
      Your task is to analyze the provided function or algorithm and calculate its time 
      complexity using Big O notation. Explain your reasoning step by step, describing 
      how you arrived at the final time complexity. Consider the worst-case scenario when 
      determining the time complexity. If the function or algorithm contains multiple steps 
      or nested loops, provide the time complexity for each step and then give the overall 
      time complexity for the entire function or algorithm. Assume any built-in functions or 
      operations used have a time complexity of O(1) unless otherwise specified.

    prompt: |
      ```python
      def example_function(n):
          total = 0
          for i in range(n):
              for j in range(n):
                  total += i * j
          return total
      ```
